{"meta":{"title":"龟壳","subtitle":"","description":"如题","author":"Orca","url":"https://orcamin.github.io","root":"/"},"pages":[{"title":"所有标签","date":"2024-10-06T12:28:33.228Z","updated":"2024-10-06T12:28:33.228Z","comments":true,"path":"tags/index.html","permalink":"https://orcamin.github.io/tags/index.html","excerpt":"","text":""},{"title":"","date":"2024-10-06T12:53:28.794Z","updated":"2024-10-06T12:53:28.794Z","comments":true,"path":"404.html","permalink":"https://orcamin.github.io/404.html","excerpt":"","text":"404 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"},{"title":"archives","date":"2024-10-06T12:01:59.000Z","updated":"2024-10-06T12:01:59.967Z","comments":true,"path":"archives/index.html","permalink":"https://orcamin.github.io/archives/index.html","excerpt":"","text":""},{"title":"","date":"2024-10-08T09:58:26.161Z","updated":"2024-10-08T09:58:26.161Z","comments":true,"path":"about/index.html","permalink":"https://orcamin.github.io/about/index.html","excerpt":"","text":"人只愿意相信自己想相信的"},{"title":"所有分类","date":"2024-10-06T13:29:50.677Z","updated":"2024-10-06T13:29:50.677Z","comments":true,"path":"categories/index.html","permalink":"https://orcamin.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"github.io绑定域名","slug":"github-domain","date":"2024-12-17T23:41:15.000Z","updated":"2024-12-18T01:36:00.575Z","comments":true,"path":"2024/12/18/github-domain/","permalink":"https://orcamin.github.io/2024/12/18/github-domain/","excerpt":"","text":"在 GitHub Pages 仓库新建 CNAME 文件填入域名 进入 GitHub Pages 仓库的 Settings 界面 Settings -&gt; Pages -&gt; Custom domain：&lt;域名&gt; 添加域名解析 Cloudflare-&gt; 账户主页 -&gt; 域名 -&gt; DNS记录 分别为www和@添加4个A记录 185.199.108.153 185.199.109.153 185.199.110.153 185.199.111.153 等待几分钟","categories":[{"name":"NOTE","slug":"NOTE","permalink":"https://orcamin.github.io/categories/NOTE/"}],"tags":[{"name":"Cloudflare","slug":"Cloudflare","permalink":"https://orcamin.github.io/tags/Cloudflare/"},{"name":"域名","slug":"域名","permalink":"https://orcamin.github.io/tags/%E5%9F%9F%E5%90%8D/"},{"name":"github","slug":"github","permalink":"https://orcamin.github.io/tags/github/"}],"author":"Orca"},{"title":"botfather","slug":"botfather","date":"2024-12-17T20:52:42.000Z","updated":"2024-12-17T22:33:34.220Z","comments":true,"path":"2024/12/18/botfather/","permalink":"https://orcamin.github.io/2024/12/18/botfather/","excerpt":"","text":"botfather指令&#x2F;newbot创建一个新的机器人&#x2F;mybots编辑你的机器人 编辑机器人&#x2F;setname更改机器人的名称&#x2F;setdescription更改机器人描述&#x2F;setabouttext更改机器人信息&#x2F;setuserpic更改机器人个人资料照片&#x2F;setcommands更改命令列表&#x2F;deletebot – 删除机器人 机器人设置&#x2F;token生成授权令牌&#x2F;revoke - 撤销机器人访问令牌&#x2F;setinline – 切换内联模式&#x2F;setinlinegeo – 切换内联位置请求&#x2F;setinlinefeedback – 更改内联反馈设置&#x2F;setjoingroups – 你的机器人可以添加到群组吗？&#x2F;setprivacy - 切换群组隐私模式 Web 应用&#x2F;myapps编辑你的网络应用&#x2F;newapp – 创建一个新的Web 应用程序&#x2F;listapps - 获取你的 Web 应用列表&#x2F;editapp – 编辑 Web 应用程序&#x2F;deleteapp删除现有的Web应用程序 游戏&#x2F;mygames编辑你的游戏&#x2F;newgame创建新游戏&#x2F;listgames获取你的游戏列表&#x2F;editgame编辑游戏&#x2F;deletegame删除现有游戏","categories":[{"name":"NOTE","slug":"NOTE","permalink":"https://orcamin.github.io/categories/NOTE/"}],"tags":[{"name":"botfather","slug":"botfather","permalink":"https://orcamin.github.io/tags/botfather/"},{"name":"Webhook","slug":"Webhook","permalink":"https://orcamin.github.io/tags/Webhook/"}],"author":"Orca"},{"title":"在immortalwrt搭建WireGuard","slug":"immortalwrt-wireguard","date":"2024-12-17T18:25:32.000Z","updated":"2024-12-17T23:30:40.673Z","comments":true,"path":"2024/12/18/immortalwrt-wireguard/","permalink":"https://orcamin.github.io/2024/12/18/immortalwrt-wireguard/","excerpt":"","text":"ps：在隧道中是通过IPv4通信的，因此内网设备不需要IPv6地址 前提 wan已获得IPv6地址 已为软路由地址绑定域名配置DDNS luci-proto-wireguard qrencode 添加并配置端口 网络 -&gt; 接口 -&gt; 添加新接口 名称：wireguard（随意） 协议：WireGuard VPN 创建 常规设置 生成密钥对 监听端口：&lt;要开放的端口&gt; IP 地址：192.168.5.1&#x2F;24（不能和已有网段冲突） 防火墙：lan 对端 -&gt; 添加对端 描述：&lt;设备名称&gt; 生成新的密钥对 生成预共享密钥对（可选） 允许的 IP：192.168.5.2（网段内的地址）添加 生成配置 拉到最上面 -&gt; 连接端点：&lt;域名&gt; 客户端下载WireGuard并配置手机端 +号 -&gt; 扫描二维码 -&gt; &lt;名称&gt; 电脑端 添加空隧道 复制生成的配置到替换WireGuard中的原有配置 保存配置 保存并应用 重启wireguard接口 防火墙配置放行端口 网络 -&gt; 防火墙 -&gt; 通信规则 左下角添加 常规设置 名称：Allow-WireGuard 协议：UDP 源区域：wan 目标区域：设备 目标端口：&lt;要放行的端口&gt; 操作：接受 高级设备 地址族限制：仅IPv6 保存并应用 验证 网络 -&gt; 接口 查看wireguard接口有无数据接收发送 问题：wireguard接口接收发送都为0解决：网络 -&gt; DHCP&#x2F;DNS -&gt; 高级设置 -&gt; 取消勾选过滤 IPv6 AAAA 记录 问题：网络卡顿严重解决：用wireshark抓包观察数据包是否分片 ​ 将客户端配置的MTU调小 1400/1380调整至无分片","categories":[{"name":"NOTE","slug":"NOTE","permalink":"https://orcamin.github.io/categories/NOTE/"}],"tags":[{"name":"immortalwrt","slug":"immortalwrt","permalink":"https://orcamin.github.io/tags/immortalwrt/"},{"name":"IPv6","slug":"IPv6","permalink":"https://orcamin.github.io/tags/IPv6/"},{"name":"WireGuard","slug":"WireGuard","permalink":"https://orcamin.github.io/tags/WireGuard/"}],"author":"Orca"},{"title":"将namesilo域名解析到cloudflare并使用acme为域名申请证书并在uhttpd上配置（ipv6）","slug":"domain-name","date":"2024-12-17T15:19:57.000Z","updated":"2024-12-17T20:53:55.430Z","comments":true,"path":"2024/12/17/domain-name/","permalink":"https://orcamin.github.io/2024/12/17/domain-name/","excerpt":"","text":"简介： 基于IPv6 将Namesilo域名解析到Cloudflare 给软路由网页绑定域名配置DDNS 使用uHTTPd给域名颁发自签证书 为域名申请正规证书（ACME）并在uHTTPd上配置 Namesilo域名管理 Cloudflare仪表盘 解析前提 域名 1. Cloudflare添加域名 进入Cloudflare仪表盘添加域名 现有域：&lt;域名&gt; 选择Free 复制 已分配的 Cloudflare 名称服务器 2. Namesilo修改域名服务器 进namesilo域名管理点最右边的塔 &#x2F; Change Nameservers 将原有域名服务器记录删除 ns1.dnsowl.com ns2.dnsowl.com ns3.dnsowl.com 将 已分配的 Cloudflare 名称服务器 粘贴进去并提交 3. Cloudflare 继续 等2-3分钟刷新一下便完成 DDNS&amp;Webhook前提 wan已获得IPv6地址 luci-app-ddns-go 1.DDNS（Dynamic DNS） 启用DDNS-GO进Web-UI DNS服务商：Cloudflare 创建API令牌（注意泄露） 创建令牌 -&gt; 编辑区域 DNS (使用模板) 区域资源 -&gt; Select选择域名 其他保持默认 继续 创建令牌 将令牌复制到Web-UI的Token处 关闭IPv4 启用IPv6 IPv6 -&gt; 通过网卡获取 -&gt; wan IPv6 -&gt; Domains：&lt;域名&gt; （多级域名缓解被扫描 开放必要端口 密码设置复杂些） 保存 验证 Cloudflare-&gt; 账户主页 -&gt; 域名 -&gt; DNS记录 DNS查询：nslookup &lt;域名&gt; 等待DNS解析生效 使用IPv6（5G流量）访问域名 2. Webhook 打开并启用 @DDNSGoBot 发送 /gethook 命令 复制 Webhook URL 并粘贴到Web-UI Webhook -&gt; URL 复制 RequestBody(下面的代码) 并粘贴 注：未启用 IPv4 或 IPv6 可删除对应 Object 123456789101112&#123; &quot;ipv4&quot;: &#123; &quot;result&quot;: &quot;#&#123;ipv4Result&#125;&quot;, &quot;addr&quot;: &quot;#&#123;ipv4Addr&#125;&quot;, &quot;domains&quot;: &quot;#&#123;ipv4Domains&#125;&quot; &#125;, &quot;ipv6&quot;: &#123; &quot;result&quot;: &quot;#&#123;ipv6Result&#125;&quot;, &quot;addr&quot;: &quot;#&#123;ipv6Addr&#125;&quot;, &quot;domains&quot;: &quot;#&#123;ipv6Domains&#125;&quot; &#125;&#125; 申请证书（自签&amp;正规证书）http：明文传输https：加密传输 前提 luci-i18n-uhttpd-zh-cn luci-ssl-openssl luci-app-acme（自签不用） acme-acmesh-dnsapi（自签不用） 自签证书 进uHTTPd插件 删除旧证书和密钥 鼠标点地址栏并回车 uHTTPd自签名证书参数 -&gt; 密钥长度：1024 保存并应用 端口转发（DNAT） 防火墙相关：可查阅iptables nftables netfilter 网络 -&gt; 防火墙 -&gt; 端口转发 -&gt; 添加 地址族限制：仅IPv6 协议：TCP 源区域：wan 目标端口：&lt;要开放的端口&gt; 目标区域：未指定 内部端口：443 正规证书 进入ACME插件 ACME 全局配置 -&gt; 电子邮件账户：&lt;邮箱&gt; 删除示例配置 添加 常规设置 -&gt; 启用[√] 常规设置 -&gt; 域名：&lt;域名&gt; 质询验证 -&gt; 验证方式：DNS 质询验证 -&gt; DNS API：dns_cf DNS API 凭证：CF_Key&#x3D;”“ DNS API 凭证：CF_Zone_ID&#x3D;”&lt;区域 ID&gt;” Cloudflare 账户主页 -&gt; &lt;域名&gt; -&gt; 概述 -&gt; 右下角API -&gt; 区域 ID 保存并应用 等待3-5分钟 进入uHTTPd插件 修改证书路径 HTTPS 证书 (DER 或 PEM 格式)：&#x2F;etc&#x2F;acme&#x2F;域名&#x2F;fullchain.cet HTTPS 私钥 (DER 或 PEM 格式)：&#x2F;etc&#x2F;acme&#x2F;域名&#x2F;域名.key 保存并应用","categories":[{"name":"NOTE","slug":"NOTE","permalink":"https://orcamin.github.io/categories/NOTE/"}],"tags":[{"name":"immortalwrt","slug":"immortalwrt","permalink":"https://orcamin.github.io/tags/immortalwrt/"},{"name":"TSL证书","slug":"TSL证书","permalink":"https://orcamin.github.io/tags/TSL%E8%AF%81%E4%B9%A6/"},{"name":"Webhook","slug":"Webhook","permalink":"https://orcamin.github.io/tags/Webhook/"},{"name":"IPv6","slug":"IPv6","permalink":"https://orcamin.github.io/tags/IPv6/"},{"name":"Namesilo","slug":"Namesilo","permalink":"https://orcamin.github.io/tags/Namesilo/"},{"name":"ACME","slug":"ACME","permalink":"https://orcamin.github.io/tags/ACME/"},{"name":"uHTTPd","slug":"uHTTPd","permalink":"https://orcamin.github.io/tags/uHTTPd/"},{"name":"Cloudflare","slug":"Cloudflare","permalink":"https://orcamin.github.io/tags/Cloudflare/"},{"name":"ddns-go","slug":"ddns-go","permalink":"https://orcamin.github.io/tags/ddns-go/"},{"name":"域名","slug":"域名","permalink":"https://orcamin.github.io/tags/%E5%9F%9F%E5%90%8D/"}],"author":"Orca"},{"title":"Windows系统备份还原&切换版本激活工具&ipv4无internet但ipv6正常","slug":"win-system","date":"2024-12-13T14:28:43.000Z","updated":"2024-12-14T07:28:11.338Z","comments":true,"path":"2024/12/13/win-system/","permalink":"https://orcamin.github.io/2024/12/13/win-system/","excerpt":"","text":"备份还原备份 进PE 用dism++备份（已使用dism++备份成功） 记得备份在系统盘外 还原 进PE 用CGI还原，选择备份分区，选择还原分区，选择要还原的镜像（.gho .wim） 开始执行 切换版本&amp;激活工具文档 传统下载 &#x2F; PowerShell 下载链接进文档找 PowerShell输入irm https://get.activated.win | iex 问题：connected but ping failed 解决：dns服务器改8.8.8.8 ipv4无internet但ipv6正常 控制面板 -&gt; 网络更改适配器 ipv4设置改手动，禁用再启动 ipv4设置改回自动，禁用再启动 internet连接正常但连接不到dns服务器 dns服务器改8.8.8.8 原因：开着魔法关机 解决：再来一遍 clash verge报错：系统找不到指定文件。（os error 2） 解决：设置 clash内核重启","categories":[{"name":"NOTE","slug":"NOTE","permalink":"https://orcamin.github.io/categories/NOTE/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://orcamin.github.io/tags/Windows/"},{"name":"激活","slug":"激活","permalink":"https://orcamin.github.io/tags/%E6%BF%80%E6%B4%BB/"},{"name":"备份","slug":"备份","permalink":"https://orcamin.github.io/tags/%E5%A4%87%E4%BB%BD/"},{"name":"还原","slug":"还原","permalink":"https://orcamin.github.io/tags/%E8%BF%98%E5%8E%9F/"},{"name":"网络异常","slug":"网络异常","permalink":"https://orcamin.github.io/tags/%E7%BD%91%E7%BB%9C%E5%BC%82%E5%B8%B8/"}],"author":"Orca"},{"title":"颁发ACME证书以及遇到的问题（Namesilo）","slug":"Namesilo_ACME","date":"2024-12-08T15:40:36.000Z","updated":"2024-12-17T18:28:00.057Z","comments":true,"path":"2024/12/08/Namesilo_ACME/","permalink":"https://orcamin.github.io/2024/12/08/Namesilo_ACME/","excerpt":"","text":"简介： 在软路由上使用为Namesilo域名颁发ACME证书并在uHTTPd上配置 已弃用Namesilo解析：解析速度慢，常访问不上 申请证书服务 -&gt; ACME证书 -&gt; 添加 常规设置 -&gt; 启用√ 常规设置 -&gt; 域名 质询验证 -&gt; 验证方式: DNS 质询验证 -&gt; DNS API: dns_namesilo 质询验证 -&gt; DNS API 凭证: Namesilo_Key&#x3D;”“ 等上几分钟，一定要等。 配置uHTTPd服务 -&gt; uHTTPd 修改证书路径 证书：&#x2F;etc&#x2F;acme&#x2F;域名&#x2F;fullchain.cer 私钥：&#x2F;etc&#x2F;acme&#x2F;域名&#x2F;域名.key 等几分钟，使用一台局域网外的设备访问网站进行验证证书是否生效 注意事项：1. 端口号记得填上 ​ 2. 必须公网ipv6访问，在局域网内则使用默认端口 问题：证书没有生成解决：ssh /etc/init.d/acme查看相关指令 /etc/init.d/acme restart重新申请查看错误日志排错 问题：密钥生成完成并配置完了但是作死点了删除旧证书和密钥导致证书变回自签证书解决： 前提：开启SSH 把现在的证书和密钥拷到&#x2F;etc（改名为uhttpd.cer和uhttpd.key好认点） 删除&#x2F;etc&#x2F;acme&#x2F;域名文件夹 rm -r或rm -rf(强制) 重启acme/etc/init.d/acme restart","categories":[{"name":"NOTE","slug":"NOTE","permalink":"https://orcamin.github.io/categories/NOTE/"}],"tags":[{"name":"immortalwrt","slug":"immortalwrt","permalink":"https://orcamin.github.io/tags/immortalwrt/"},{"name":"TSL证书","slug":"TSL证书","permalink":"https://orcamin.github.io/tags/TSL%E8%AF%81%E4%B9%A6/"},{"name":"IPv6","slug":"IPv6","permalink":"https://orcamin.github.io/tags/IPv6/"},{"name":"Namesilo","slug":"Namesilo","permalink":"https://orcamin.github.io/tags/Namesilo/"},{"name":"ACME","slug":"ACME","permalink":"https://orcamin.github.io/tags/ACME/"},{"name":"uHTTPd","slug":"uHTTPd","permalink":"https://orcamin.github.io/tags/uHTTPd/"},{"name":"证书","slug":"证书","permalink":"https://orcamin.github.io/tags/%E8%AF%81%E4%B9%A6/"}],"author":"Orca"},{"title":"wsl-kali安装以及网络配置","slug":"kali","date":"2024-11-28T22:59:23.000Z","updated":"2024-12-08T07:08:02.259Z","comments":true,"path":"2024/11/29/kali/","permalink":"https://orcamin.github.io/2024/11/29/kali/","excerpt":"","text":"Windows通过WSL安装kali-linux出现问题 解决：wsl --update 将kali迁移到非C盘 12345678910查看已安装wsl -l -v导出wsl --export kali-linux E:\\WSL\\kali-linux.tar注销wsl --unregister kali-linux导入wsl --import kali-linux E:\\WSL\\kali-linux E:\\WSL\\kali-linux.tar删除.tardel E:\\WSL\\kali-linux.tar 修改默认用户 kali config --default-user &lt;username&gt; 图形化界面添加快捷方式 在终端setting.json中添加 12345678&#123; &quot;guid&quot;: &quot;&#123;55ca431a-3a87-5fb3-83cd-11ececc031d2&#125;&quot;, &quot;hidden&quot;: false, &quot;icon&quot;: &quot;file:///c:/users/&lt;windows user&gt;/pictures/icons/kali-menu.png&quot;, &quot;name&quot;: &quot;Win-KeX&quot;, &quot;commandline&quot;: &quot;wsl kex wtstart&quot;, &quot;startingDirectory&quot; : &quot;//wsl$/kali-linux/home/&lt;kali user&gt;&quot;&#125; 配置网络（桥接） 详细教程 Hyper-v创建虚拟交换机（外部 选网卡） 问题： 创建不了 解决：控制面板 -&gt; 查看网络状态和任务 -&gt; 更改适配器设置 -&gt; 找到WLAN（如果不是连接的WIFI，以太网也一样）-&gt; 找到共享选项全部关闭（把勾取消掉） hyper-v删除虚拟交换机一直卡在正在应用更改 解决： 关闭虚拟机 断网 重启hyper-v：（成功） win + R service.msc 关闭并重启“Hyper-V 虚拟机管理” PowerShell强制删除 管理员运行 获取虚拟交换机名称Get-VMSwitch 强制删除Remove-VMSwitch -Name &quot;虚拟交换机名称&quot; -Force 之前有过现在删除重新创建 解决：win + r 输入control，进入控制面板 -&gt; 查看网络状态和任务 -&gt; 更改适配器设置 -&gt; 找到WLAN（如果不是连接的WIFI，以太网也一样）-&gt; 将Hyper-V可拓展的虚拟机交换机给取消。 %Userprofile%创建一个.wslconfig 12345678910111213[wsl2]processors=4 ; 设置 WSL 2 可以使用的最大 CPU 核心数为 4，自行修改memory=4GB ; 设置 WSL 2 可以使用的最大内存量为 4 GB，自行修改swap=4GB ; 设置 WSL 2 的交换空间大小为 4 GB，自行修改localhostForwarding=true ; 允许本地主机转发networkingMode=bridged ; 设置网络模式为桥接模式vmSwitch=WSLwireless ; 指定使用的虚拟交换机为 &quot;WSL&quot;，这里填虚拟交换机的名称ipv6=false ; 启用 IPv6 支持dhcp=false ; 禁用 DHCP，手动设置网络配置 [experimental]autoMemoryReclaim=gradual ; 慢慢回收内存autoProxy=true ; 启用自动代理设置 配置静态网络sudo vim &#x2F;etc&#x2F;network&#x2F;interfaces 1234567891011# Include files from /etc/network/interfaces.d:source /etc/network/interfaces.d/*# The loopback network interfaceauto loiface lo inet loopbackauto eth0iface eth0 inet staticaddress 192.168.31.246gateway 192.168.31.1netmask 255.255.255.0 sudo vim &#x2F;etc&#x2F;resolv.conf 1234#GeneratedbyNetworkManagerdomainnameserver 192.168.31.1search localdomain sudo vim &#x2F;etc&#x2F;wsl.conf 1234[boot]systemd=false[network]generateResolvConf=false sudo &#x2F;etc&#x2F;init.d&#x2F;networking restart","categories":[{"name":"NOTE","slug":"NOTE","permalink":"https://orcamin.github.io/categories/NOTE/"}],"tags":[{"name":"kali","slug":"kali","permalink":"https://orcamin.github.io/tags/kali/"},{"name":"linux","slug":"linux","permalink":"https://orcamin.github.io/tags/linux/"}],"author":"Orca"},{"title":"Android Studio 遇到的问题","slug":"Android-Studio","date":"2024-10-26T21:18:22.000Z","updated":"2024-10-27T06:18:55.641Z","comments":true,"path":"2024/10/27/Android-Studio/","permalink":"https://orcamin.github.io/2024/10/27/Android-Studio/","excerpt":"","text":"开发者指南 安装失败：运行 ‘app’ 时出错 The application could not be installed: INSTALL_FAILED_TEST_ONLY Installation failed due to: ‘Error code: ‘INSTALL_FAILED_TEST_ONLY’, message&#x3D;’INSTALL_FAILED_TEST_ONLY’’ 解决方法：在Grandle Scripts目录下的gradle.properties加一行 1android.inject.testOnly=false","categories":[{"name":"NOTE","slug":"NOTE","permalink":"https://orcamin.github.io/categories/NOTE/"}],"tags":[{"name":"Android Studio","slug":"Android-Studio","permalink":"https://orcamin.github.io/tags/Android-Studio/"}]},{"title":"写网页","slug":"webpage","date":"2024-10-08T20:41:54.000Z","updated":"2024-11-28T23:01:23.384Z","comments":true,"path":"2024/10/09/webpage/","permalink":"https://orcamin.github.io/2024/10/09/webpage/","excerpt":"","text":"第一行代码，hello,world 初始 1&lt;p&gt;hello,world&lt;/p&gt; &lt;p&gt;：paragraph，段落&lt;h1&gt;：一级标题&lt;h2&gt;：二级标题，以此类推至h6 添加样式 格式 1&lt;p style=&quot;width: 20px&quot;&gt;文字内容&lt;/p&gt; &lt;&gt;内加style=“ ”，“ ”内加xxx: xxx px：pixel，像素 123&lt;Orca style=&quot;background: powderblue&quot;&gt;自定义标签&lt;/Orca&gt; # 字多少模块就多大&lt;Orca style=&quot;background: powderblue;display: block;&quot;&gt;自定义标签但块&lt;/Orca&gt; # block&lt;p style=&quot;background: red&quot;&gt;默认style标签&lt;/p&gt; # 默认block 定义模块 1234567891011&lt;box style=&quot; width: 200px; # 宽度 height: 50px; # 高度 background: powderblue; # 盒子颜色 display: block; # 样式为块 margin: 30px auto; # 边距 上下30 左右自动 border: 5px solid black; # 边框 padding: 20px; # 高度20 &quot;&gt; 盒子 &lt;/box&gt; margin：外边距，与其他模块之间的距离padding：内边距，与内容的距离，防止移动端显示贴边什么的border：边框align：对齐 分区 1&lt;div&gt;&lt;/div&gt; &lt;div&gt;：division，分区，无实意 123456&lt;div style=&quot; background-color: powderblue; padding: 10px; text-align: center; font-size: 12px;&quot;&gt;&lt;/div&gt; font：字体 插入图片 1&lt;img src=&#x27;url&#x27; alt=&quot;图片名&quot; width=&quot;xxpx&quot; height=&quot;xxpx&quot;&gt; alt：alternative text，替代文本 本地图片：放同级目录，用文件名 插入链接 1&lt;a href=&quot;url&quot;&gt; 目前用到的函数汇总 &lt;style&gt; 123456789width: 10px;height: 10px;max-width: 700px; # 防止占全屏text-aligh: center; # 文字对齐: 居中line-height: 1.7; # 行高: 1.7倍margin: 30px auto; # 外边距: 上下 左右auto(自动两边相等-居中)padding: 15px; # 内边距border: 5px solid pink # 边框: 参数 样式 颜色border-radius: 5px; # 边框圆角 radius：半径 标签 &lt;meta&gt;：元数据 放head里 整个网页的属性 123456&lt;meta charset=&quot;UTF-8&quot; /&gt; # 字符集为UTF-8&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; # 兼容老浏览器(可有可无)&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;# 显示宽度为设备宽度 初始比例1.0&lt;title&gt;Document&lt;/title&gt; &lt;div&gt;：division 可包含任意种类标签 因此用的最多 问题 问题：固定在底部的div遮挡其他元素 方案：为body设置margin-bottom值为置底&lt;div&gt;的height 快捷键Ctrl + D 选下一个相同字符Alt + 左键 添加光标，同时编辑多处地方Shift + Alt + ↑&#x2F;↓ 复制到上&#x2F;下一行 HTML &amp; CSS &amp; JavaScript HTML (HyperText Markup Language)：是什么 相当于房子的结构，定义网页的内容和结构，如标题、段落、图像、列表等。 CSS (Cascading Style Sheets)：看起来 相当于房子的装修，定义网页的样式布局，例如颜色、字体、间距、背景等。 JavaScript：做什么 相当于房子的电器和各种互动装置，为网页添加交互性和动态行为。 JavaScript 可以响应用户操作，修改网页内容，与服务器通信，以及实现各种复杂的动画和特效。","categories":[{"name":"NOTE","slug":"NOTE","permalink":"https://orcamin.github.io/categories/NOTE/"}],"tags":[{"name":"HTML","slug":"HTML","permalink":"https://orcamin.github.io/tags/HTML/"},{"name":"CSS","slug":"CSS","permalink":"https://orcamin.github.io/tags/CSS/"}]},{"title":"Hexo备忘","slug":"hexo","date":"2024-10-06T02:32:50.273Z","updated":"2024-12-18T01:41:41.739Z","comments":true,"path":"2024/10/06/hexo/","permalink":"https://orcamin.github.io/2024/10/06/hexo/","excerpt":"","text":"点击 文档 &amp; 故障排除 &amp; GitHub 了解更多 一、常用1. 文章①新建文章1$ hexo new &quot;My New Post&quot; 详情：Writing ②文章封面配置headimg 1headimg: 图片url ③置顶文章配置pin 1pin: true ④参考资料123references: - title: 某篇文章 url: https:// 2. 网站①本地预览网站12$ hexo server$ hexo s 详细：Server ②生成静态网站12$ hexo generate$ hexo g 详细：Generating ③网站部署到服务器12$ hexo deploy$ hexo d 详细：Deployment ④生成部署二合一1$ hexo g -d 二、备忘1. 默认配置文件地址1blog\\node_modules\\hexo-theme-volantis\\ 2. 改动12logo: # choose [img] or [icon + title]img: ... 12sidebar: position: left # left right 关于出现报错ERROR Script load failed:什么什么什么.jsError: Cannot find module ‘xxxx’示例：报错Error: Cannot find module hexo-util“ 执行命令npm install hexo-util –save 1npm install xxxx --save","categories":[{"name":"NOTE","slug":"NOTE","permalink":"https://orcamin.github.io/categories/NOTE/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://orcamin.github.io/tags/hexo/"}],"author":"Orca"}],"categories":[{"name":"NOTE","slug":"NOTE","permalink":"https://orcamin.github.io/categories/NOTE/"}],"tags":[{"name":"Cloudflare","slug":"Cloudflare","permalink":"https://orcamin.github.io/tags/Cloudflare/"},{"name":"域名","slug":"域名","permalink":"https://orcamin.github.io/tags/%E5%9F%9F%E5%90%8D/"},{"name":"github","slug":"github","permalink":"https://orcamin.github.io/tags/github/"},{"name":"botfather","slug":"botfather","permalink":"https://orcamin.github.io/tags/botfather/"},{"name":"Webhook","slug":"Webhook","permalink":"https://orcamin.github.io/tags/Webhook/"},{"name":"immortalwrt","slug":"immortalwrt","permalink":"https://orcamin.github.io/tags/immortalwrt/"},{"name":"IPv6","slug":"IPv6","permalink":"https://orcamin.github.io/tags/IPv6/"},{"name":"WireGuard","slug":"WireGuard","permalink":"https://orcamin.github.io/tags/WireGuard/"},{"name":"TSL证书","slug":"TSL证书","permalink":"https://orcamin.github.io/tags/TSL%E8%AF%81%E4%B9%A6/"},{"name":"Namesilo","slug":"Namesilo","permalink":"https://orcamin.github.io/tags/Namesilo/"},{"name":"ACME","slug":"ACME","permalink":"https://orcamin.github.io/tags/ACME/"},{"name":"uHTTPd","slug":"uHTTPd","permalink":"https://orcamin.github.io/tags/uHTTPd/"},{"name":"ddns-go","slug":"ddns-go","permalink":"https://orcamin.github.io/tags/ddns-go/"},{"name":"Windows","slug":"Windows","permalink":"https://orcamin.github.io/tags/Windows/"},{"name":"激活","slug":"激活","permalink":"https://orcamin.github.io/tags/%E6%BF%80%E6%B4%BB/"},{"name":"备份","slug":"备份","permalink":"https://orcamin.github.io/tags/%E5%A4%87%E4%BB%BD/"},{"name":"还原","slug":"还原","permalink":"https://orcamin.github.io/tags/%E8%BF%98%E5%8E%9F/"},{"name":"网络异常","slug":"网络异常","permalink":"https://orcamin.github.io/tags/%E7%BD%91%E7%BB%9C%E5%BC%82%E5%B8%B8/"},{"name":"证书","slug":"证书","permalink":"https://orcamin.github.io/tags/%E8%AF%81%E4%B9%A6/"},{"name":"kali","slug":"kali","permalink":"https://orcamin.github.io/tags/kali/"},{"name":"linux","slug":"linux","permalink":"https://orcamin.github.io/tags/linux/"},{"name":"Android Studio","slug":"Android-Studio","permalink":"https://orcamin.github.io/tags/Android-Studio/"},{"name":"HTML","slug":"HTML","permalink":"https://orcamin.github.io/tags/HTML/"},{"name":"CSS","slug":"CSS","permalink":"https://orcamin.github.io/tags/CSS/"},{"name":"hexo","slug":"hexo","permalink":"https://orcamin.github.io/tags/hexo/"}]}